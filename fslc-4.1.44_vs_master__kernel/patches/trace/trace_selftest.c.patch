--- /home/hjj/Downloads/linux-master/kernel/trace/trace_selftest.c
+++ /home/hjj/Downloads/linux-fslc-4.1.44/kernel/trace/trace_selftest.c
@@ -1,5 +1,7 @@
+// SPDX-License-Identifier: GPL-2.0
 /* Include in trace.c */
 
+#include <uapi/linux/sched/types.h>
 #include <linux/stringify.h>
 #include <linux/kthread.h>
 #include <linux/delay.h>
@@ -58,7 +60,7 @@
  * Test the trace buffer to see if all the elements
  * are still sane.
  */
-static int trace_test_buffer(struct trace_buffer *buf, unsigned long *count)
+static int __maybe_unused trace_test_buffer(struct trace_buffer *buf, unsigned long *count)
 {
 	unsigned long flags, cnt = 0;
 	int cpu, ret = 0;
@@ -272,7 +274,7 @@
 		goto out_free;
 	if (cnt > 1) {
 		if (trace_selftest_test_global_cnt == 0)
-			goto out;
+			goto out_free;
 	}
 	if (trace_selftest_test_dyn_cnt == 0)
 		goto out_free;
@@ -1149,9 +1151,9 @@
 }
 #endif /* CONFIG_SCHED_TRACER */
 
-#ifdef CONFIG_CONTEXT_SWITCH_TRACER
+#ifdef CONFIG_BRANCH_TRACER
 int
-trace_selftest_startup_sched_switch(struct tracer *trace, struct trace_array *tr)
+trace_selftest_startup_branch(struct tracer *trace, struct trace_array *tr)
 {
 	unsigned long count;
 	int ret;
@@ -1179,37 +1181,5 @@
 
 	return ret;
 }
-#endif /* CONFIG_CONTEXT_SWITCH_TRACER */
-
-#ifdef CONFIG_BRANCH_TRACER
-int
-trace_selftest_startup_branch(struct tracer *trace, struct trace_array *tr)
-{
-	unsigned long count;
-	int ret;
-
-	/* start the tracing */
-	ret = tracer_init(trace, tr);
-	if (ret) {
-		warn_failed_init_tracer(trace, ret);
-		return ret;
-	}
-
-	/* Sleep for a 1/10 of a second */
-	msleep(100);
-	/* stop the tracing. */
-	tracing_stop();
-	/* check the trace buffer */
-	ret = trace_test_buffer(&tr->trace_buffer, &count);
-	trace->reset(tr);
-	tracing_start();
-
-	if (!ret && !count) {
-		printk(KERN_CONT ".. no entries found ..");
-		ret = -1;
-	}
-
-	return ret;
-}
 #endif /* CONFIG_BRANCH_TRACER */
 
